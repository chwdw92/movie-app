{"ast":null,"code":"var _jsxFileName = \"/Users/david/Desktop/interview-project/movie-app/src/components/pages/Search.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { TextField, InputAdornment } from '@mui/material';\nimport SearchIcon from '@mui/icons-material/Search';\nimport { trendingBaseUrl } from '../../helpers/constants';\nimport CustomPagination from '../commons/layouts/CustomPagination';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styleMUISearchTextField = {\n  \"& *\": {\n    color: 'darkgray',\n    fontSize: '20px'\n  },\n  \"& .Mui-focused\": {\n    color: '#fff'\n  },\n  \"& .Mui-focused *\": {\n    color: '#fff'\n  }\n};\n\nfunction Search(_ref) {\n  _s();\n\n  let {\n    passoverPropObj\n  } = _ref;\n  const {\n    pageType,\n    pageTitle,\n    searchInputPlaceholder,\n    mediaType,\n    extraQueryStrForTrendingReq,\n    extraQueryStrForSearchReq\n  } = passoverPropObj;\n  const [searchText, setSearchText] = useState('');\n  const [searchResult, setSearchResult] = useState([]);\n  const [numOfPages, setNumOfPages] = useState();\n  const [timeoutId, setTimeoutId] = useState(null);\n  useEffect(() => {\n    const trendingUrl = trendingBaseUrl.replace('%mediaType%', mediaType) + extraQueryStrForTrendingReq; //   const { data } = await axios.get(`https://api.themoviedb.org/3/search/${(type === 1) ? 'tv':'movie'}?api_key=${process.env.REACT_APP_KEY}&language=en-US&query=${searchText}&page=${page}&include_adult=false`);\n\n    console.log(trendingUrl);\n  }, []);\n\n  const searchChanges = e => {\n    const currentSearch = e.target.value.trim();\n    const tempPrevSearch = searchText.trim();\n    setSearchText(currentSearch);\n    const minLenToTiggerApiCall = 1;\n    const timeIntervalForApiCall = 400; // ms \n    // canceling the previous reserved API call. \n\n    clearTimeout(timeoutId);\n    setTimeoutId(null); // reset \n\n    if (currentSearch !== tempPrevSearch && currentSearch.length > minLenToTiggerApiCall) {\n      // for debouncing\n      setTimeoutId(setTimeout(() => fetchDataForSearch(currentSearch), timeIntervalForApiCall));\n    }\n  };\n\n  const fetchDataForSearch = async searchText => {//  const { data } = await axios.get(`http://www.omdbapi.com/?s=${searchTerm}&type=movie&v=1&r=json&apikey=19e8b1d8`);\n    //setSearchResult(data.Search);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      sx: { ...styleMUISearchTextField\n      },\n      className: \"mui-text-field\",\n      required: true,\n      label: searchInputPlaceholder,\n      variant: \"standard\",\n      InputProps: {\n        startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n          position: \"start\",\n          children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)\n      },\n      defaultValue: searchText,\n      onChange: e => searchChanges(e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Search, \"xfauByesp+EmFy6W7lpIJCezHfg=\");\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/david/Desktop/interview-project/movie-app/src/components/pages/Search.js"],"names":["useState","useEffect","axios","TextField","InputAdornment","SearchIcon","trendingBaseUrl","CustomPagination","styleMUISearchTextField","color","fontSize","Search","passoverPropObj","pageType","pageTitle","searchInputPlaceholder","mediaType","extraQueryStrForTrendingReq","extraQueryStrForSearchReq","searchText","setSearchText","searchResult","setSearchResult","numOfPages","setNumOfPages","timeoutId","setTimeoutId","trendingUrl","replace","console","log","searchChanges","e","currentSearch","target","value","trim","tempPrevSearch","minLenToTiggerApiCall","timeIntervalForApiCall","clearTimeout","length","setTimeout","fetchDataForSearch","startAdornment"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { TextField, InputAdornment } from '@mui/material';\nimport SearchIcon from '@mui/icons-material/Search';\nimport { trendingBaseUrl } from '../../helpers/constants';\nimport CustomPagination from '../commons/layouts/CustomPagination';\n\n\nconst styleMUISearchTextField = {\n  \"& *\": {\n    color: 'darkgray',\n    fontSize: '20px'\n  },\n  \"& .Mui-focused\" : {\n    color: '#fff'\n  },\n  \"& .Mui-focused *\": {\n    color: '#fff'\n  },\n};\n\n\nfunction Search({ passoverPropObj }) {\n    const { pageType, pageTitle, searchInputPlaceholder, mediaType, extraQueryStrForTrendingReq, extraQueryStrForSearchReq } = passoverPropObj;\n    \n    const [searchText, setSearchText] = useState('');\n    const [searchResult, setSearchResult] = useState([]);\n    const [numOfPages, setNumOfPages] = useState();\n    const [timeoutId, setTimeoutId] = useState(null); \n    \n    \n    useEffect(() => {\n        const trendingUrl = trendingBaseUrl.replace('%mediaType%', mediaType)+extraQueryStrForTrendingReq\n\n\n     //   const { data } = await axios.get(`https://api.themoviedb.org/3/search/${(type === 1) ? 'tv':'movie'}?api_key=${process.env.REACT_APP_KEY}&language=en-US&query=${searchText}&page=${page}&include_adult=false`);\n   \n        console.log(trendingUrl);\n    }, []);\n\n\n  const searchChanges = (e) => {\n    const currentSearch = e.target.value.trim(); \n    const tempPrevSearch = searchText.trim();\n    \n    setSearchText(currentSearch);\n\n    const minLenToTiggerApiCall = 1; \n    const timeIntervalForApiCall = 400; // ms \n\n    // canceling the previous reserved API call. \n    clearTimeout(timeoutId);\n    setTimeoutId(null); // reset \n    \n    if( currentSearch !== tempPrevSearch && \n            currentSearch.length > minLenToTiggerApiCall) {\n        // for debouncing\n        setTimeoutId(setTimeout(()=> fetchDataForSearch(currentSearch) , timeIntervalForApiCall));\n    }\n\n  \n  }\n\n\n  const fetchDataForSearch =  async(searchText) => {\n  //  const { data } = await axios.get(`http://www.omdbapi.com/?s=${searchTerm}&type=movie&v=1&r=json&apikey=19e8b1d8`);\n\n  \n\n  //setSearchResult(data.Search);\n\n  }\n\n\n    return (\n        <section>\n            <h2>Search</h2> \n            <TextField  sx={{...styleMUISearchTextField}} className='mui-text-field' required label={searchInputPlaceholder} variant=\"standard\"  InputProps={{\n          startAdornment: (\n            <InputAdornment position=\"start\">\n              <SearchIcon />\n            </InputAdornment>\n          ),\n        }}  defaultValue={searchText} onChange={(e)=>searchChanges(e)} />        \n            \n        </section>\n    )\n}\n\nexport default Search\n\n"]},"metadata":{},"sourceType":"module"}